{"ast":null,"code":"var _jsxFileName = \"/Users/cho/coding/html/vscode\\u110B\\u1167\\u11AB\\u1109\\u1173\\u11B8/proj-coin/coin/src/components/pages/CalendarPage/CalendarPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Select, Button, Modal, Typography, Row, Col } from 'antd';\nimport './CalendarPage.css'; //import \"./antdCalendar.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst {\n  Option\n} = Select;\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction CalendarPage() {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [coinData, setcoinData] = useState({});\n  const [selectedKey, setSelectedKey] = useState(\"\");\n  const [isModalDetailVisible, setIsModalDetailVisible] = useState(false);\n  const [selectedDetailKey, setSelectedDetailKey] = useState(\"\");\n  const [coinNameData, setCoinNameData] = useState({});\n  const [selectedExchange, setSelectedExchange] = useState(\"upbit\");\n  useEffect(() => {\n    axios.get('http://13.124.18.171/api/getCoinData').then(response => {\n      setcoinData(JSON.parse(response.data[0].content));\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get('http://13.124.18.171/api/getCoinName').then(response => {\n      setCoinNameData(JSON.parse(response.data[0].content));\n      console.log(JSON.parse(response.data[0].content));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function dateCellRender(value) {\n    let tmpKey = value.year() + '/' + String(Number(value.month()) + 1) + '/' + value.date(); // console.log(coinData[tmpKey]);\n    //console.log(upbitCoin);\n\n    let listData = [];\n\n    for (var key in coinData[tmpKey]) {\n      if (key in coinNameData[selectedExchange]) {\n        listData.push({\n          coinSymbol: key,\n          coinKoreanName: coinNameData[selectedExchange][key]\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"events\",\n      children: listData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '0.6rem'\n          },\n          children: item.coinSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n  const checkNameFromExchange = exchange => {};\n\n  const modal = () => {\n    // console.log(coinData);\n    // 모달이 이미 띄워져있는 경우\n    if (isModalDetailVisible) {\n      let listData = [];\n\n      for (var keyDate in coinData) {\n        if (selectedDetailKey in coinData[keyDate]) {\n          for (var indx in coinData[keyDate][selectedDetailKey]) {\n            let url = coinData[keyDate][selectedDetailKey][indx][0];\n            let explain = coinData[keyDate][selectedDetailKey][indx][1];\n            let fullName = coinData[keyDate][selectedDetailKey][indx][2];\n            listData.push({\n              date: keyDate,\n              url: url,\n              explain: explain,\n              fullName: fullName\n            });\n          }\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        title: coinNameData[selectedExchange][selectedDetailKey] + \" \" + listData[0]['fullName'] + ' (' + selectedDetailKey + ')',\n        visible: isModalVisible,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => setIsModalDetailVisible(false),\n          children: \"BACK\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"modal\",\n          style: {\n            overflow: 'auto',\n            maxHeight: '10rem'\n          },\n          children: listData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '0.2rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"modal-content\",\n              href: item.url,\n              target: \"_blank\",\n              children: item.date + \" \" + item.explain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, item.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    } // 모달이 처음 띄워지는 경우\n    else {\n      let listData = [];\n\n      for (var key in coinData[selectedKey]) if (key in coinNameData[selectedExchange]) listData.push({\n        coinSymbol: key,\n        coinKoreanName: coinNameData[selectedExchange][key]\n      });\n\n      if (listData.length != 0) return /*#__PURE__*/_jsxDEV(Modal, {\n        title: selectedKey,\n        visible: isModalVisible,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleOk,\n          children: \"OK\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"modal\",\n          style: {\n            overflow: 'auto',\n            maxHeight: '10rem'\n          },\n          children: listData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '0.2rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"modal-content\",\n              onClick: () => {\n                setSelectedDetailKey(item.coinSymbol);\n                setIsModalDetailVisible(true);\n              },\n              children: item.coinKoreanName + ' (' + item.coinSymbol + ')'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 23\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  const onClickCalendar = value => {\n    setSelectedKey(value.year() + '/' + String(Number(value.month()) + 1) + '/' + value.date());\n    showModal();\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    setIsModalDetailVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setIsModalDetailVisible(false);\n  };\n\n  const handleOptionChange = value => {\n    setSelectedExchange(value);\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [modal(), /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"calendar\",\n      dateCellRender: value => dateCellRender(value),\n      onSelect: value => onClickCalendar(value),\n      headerRender: ({\n        value,\n        type,\n        onChange,\n        onTypeChange\n      }) => {\n        const start = 0;\n        const end = 12;\n        const monthOptions = [];\n        const current = value.clone();\n        const localeData = value.localeData();\n        const months = [];\n\n        for (let i = 0; i < 12; i++) {\n          current.month(i);\n          months.push(localeData.monthsShort(current));\n        }\n\n        for (let index = start; index < end; index++) {\n          monthOptions.push( /*#__PURE__*/_jsxDEV(Select.Option, {\n            className: \"month-item\",\n            children: months[index]\n          }, `${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this));\n        }\n\n        const month = value.month();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 8,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                size: \"small\",\n                dropdownMatchSelectWidth: false,\n                value: String(month),\n                onChange: selectedMonth => {\n                  const newValue = value.clone();\n                  newValue.month(parseInt(selectedMonth, 10));\n                  onChange(newValue);\n                },\n                children: monthOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                size: \"small\",\n                dropdownMatchSelectWidth: false,\n                defaultValue: \"upbit\",\n                onChange: handleOptionChange,\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"upbit\",\n                  children: \"Upbit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"bitsum\",\n                  children: \"Bitsum\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"coinone\",\n                  children: \"Coinone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"coinbit\",\n                  children: \"Coinbit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CalendarPage, \"sRVhNKJ9y8AodgyntSUz5QsCDCo=\");\n\n_c = CalendarPage;\nexport default CalendarPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"sources":["/Users/cho/coding/html/vscode연습/proj-coin/coin/src/components/pages/CalendarPage/CalendarPage.js"],"names":["React","useState","useEffect","Calendar","Select","Button","Modal","Typography","Row","Col","axios","require","Option","uuidv4","replace","c","r","Math","random","v","toString","CalendarPage","isModalVisible","setIsModalVisible","coinData","setcoinData","selectedKey","setSelectedKey","isModalDetailVisible","setIsModalDetailVisible","selectedDetailKey","setSelectedDetailKey","coinNameData","setCoinNameData","selectedExchange","setSelectedExchange","get","then","response","JSON","parse","data","content","catch","err","console","log","dateCellRender","value","tmpKey","year","String","Number","month","date","listData","key","push","coinSymbol","coinKoreanName","map","item","fontSize","checkNameFromExchange","exchange","modal","keyDate","indx","url","explain","fullName","handleOk","handleCancel","overflow","maxHeight","marginBottom","length","onClickCalendar","showModal","handleOptionChange","type","onChange","onTypeChange","start","end","monthOptions","current","clone","localeData","months","i","monthsShort","index","padding","selectedMonth","newValue","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, Select, Button, Modal, Typography, Row, Col } from 'antd';\nimport './CalendarPage.css'\n//import \"./antdCalendar.css\";\n\nconst axios = require('axios');\nconst { Option } = Select;\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nfunction CalendarPage() {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [coinData, setcoinData] = useState({});\n    const [selectedKey, setSelectedKey] = useState(\"\");\n    const [isModalDetailVisible, setIsModalDetailVisible] = useState(false);\n    const [selectedDetailKey, setSelectedDetailKey] = useState(\"\");\n    const [coinNameData, setCoinNameData] = useState({});\n    const [selectedExchange, setSelectedExchange] = useState(\"upbit\");\n\n    useEffect(() => {\n      axios.get('http://13.124.18.171/api/getCoinData')\n        .then((response) => {\n          setcoinData(JSON.parse(response.data[0].content));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      axios.get('http://13.124.18.171/api/getCoinName')\n        .then((response) => {\n          setCoinNameData(JSON.parse(response.data[0].content))\n          console.log(JSON.parse(response.data[0].content))\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }, [])\n\n    function dateCellRender(value) {\n      let tmpKey = value.year() + '/' + String(Number(value.month())+1) + '/' + value.date();\n      // console.log(coinData[tmpKey]);\n      //console.log(upbitCoin);\n      let listData = [];\n      for (var key in coinData[tmpKey]) {\n        if (key in coinNameData[selectedExchange]) {\n          listData.push({coinSymbol: key, coinKoreanName: coinNameData[selectedExchange][key]});\n        }\n      }\n\n      return (\n        <ul className=\"events\">\n          {listData.map(item => (\n            <li key={uuidv4()}>\n              <span style={{fontSize: '0.6rem'}}>{item.coinSymbol}</span>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n\n    const checkNameFromExchange = (exchange) => {\n\n    }\n\n    const modal = () => {\n      // console.log(coinData);\n\n      // 모달이 이미 띄워져있는 경우\n      if (isModalDetailVisible) {\n        let listData = [];\n          for (var keyDate in coinData) {\n            if (selectedDetailKey in coinData[keyDate]) {\n              for (var indx in coinData[keyDate][selectedDetailKey]) {\n                let url = coinData[keyDate][selectedDetailKey][indx][0];\n                let explain = coinData[keyDate][selectedDetailKey][indx][1]; \n                let fullName = coinData[keyDate][selectedDetailKey][indx][2]; \n                listData.push({date: keyDate, url: url, explain: explain, fullName: fullName});\n              }\n            } \n          }\n\n        return (\n          <Modal \n              title={ coinNameData[selectedExchange][selectedDetailKey] + \" \" + listData[0]['fullName'] + ' (' + selectedDetailKey + ')' }\n              visible={isModalVisible} \n              onOk={handleOk}\n              onCancel={handleCancel}\n              footer={[\n              <Button key=\"submit\" type=\"primary\" onClick={() => setIsModalDetailVisible(false)}>\n                BACK\n              </Button>,\n              ]}>\n            <ul className=\"modal\" style={{overflow: 'auto', maxHeight: '10rem'}}>\n              {listData.map(item => (\n                <li key={item.url} style={{marginBottom: '0.2rem'}}>\n                  <a className=\"modal-content\" href={item.url} target=\"_blank\">{item.date + \" \" + item.explain}</a>\n                </li>\n              ))}\n            </ul>\n          </Modal>\n        )\n      } \n      // 모달이 처음 띄워지는 경우\n      else {\n          let listData = [];\n          for (var key in coinData[selectedKey]) \n            if (key in coinNameData[selectedExchange]) \n              listData.push({coinSymbol: key, coinKoreanName: coinNameData[selectedExchange][key]});\n          \n          if (listData.length != 0)\n            return (\n              <Modal \n                  title={selectedKey}\n                  visible={isModalVisible} \n                  onOk={handleOk}\n                  onCancel={handleCancel}\n                  footer={[\n                  <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n                    OK\n                  </Button>,\n                  ]}>\n                <ul className=\"modal\" style={{overflow: 'auto', maxHeight: '10rem'}}>\n                  {listData.map(item => (\n                    <li key={uuidv4()} style={{marginBottom: '0.2rem'}}>\n                      <a className=\"modal-content\" onClick={() => {setSelectedDetailKey(item.coinSymbol); setIsModalDetailVisible(true);}}>{item.coinKoreanName +  ' (' + item.coinSymbol + ')'}</a>\n                    </li>\n                  ))}\n                </ul>\n              </Modal>\n            )\n      }\n    }\n\n    const onClickCalendar = (value) => {\n      setSelectedKey(value.year() + '/' + String(Number(value.month())+1) + '/' + value.date());\n      showModal();\n    }\n\n    const showModal = () => {\n      setIsModalVisible(true);\n    };\n    \n    const handleOk = () => {\n      setIsModalVisible(false);\n      setIsModalDetailVisible(false);\n    };\n    \n    const handleCancel = () => {\n      setIsModalVisible(false);\n      setIsModalDetailVisible(false);\n    };\n    \n    const handleOptionChange = (value) => {\n      setSelectedExchange(value)\n      console.log(value)\n    }\n\n    return (\n      <div className='container'>\n        {modal()}\n          <Calendar \n            className=\"calendar\" \n            dateCellRender={(value) => dateCellRender(value)} \n            onSelect={(value) => onClickCalendar(value)} \n            headerRender={({ value, type, onChange, onTypeChange }) => {\n              const start = 0;\n              const end = 12;\n              const monthOptions = [];\n      \n              const current = value.clone();\n              const localeData = value.localeData();\n              const months = [];\n              for (let i = 0; i < 12; i++) {\n                current.month(i);\n                months.push(localeData.monthsShort(current));\n              }\n      \n              for (let index = start; index < end; index++) {\n                monthOptions.push(\n                  <Select.Option className=\"month-item\" key={`${index}`}>\n                    {months[index]}\n                  </Select.Option>,\n                );\n              }\n              const month = value.month();\n\n              return (\n                <div style={{ padding: 8 }}>\n                  <Row gutter={8}>\n                    <Col>\n                      <Select\n                        size=\"small\"\n                        dropdownMatchSelectWidth={false}\n                        value={String(month)}\n                        onChange={selectedMonth => {\n                          const newValue = value.clone();\n                          newValue.month(parseInt(selectedMonth, 10));\n                          onChange(newValue);\n                        }}\n                      >\n                        {monthOptions}\n                      </Select>\n                    </Col>\n                    <Col>\n                      <Select\n                        size=\"small\"\n                        dropdownMatchSelectWidth={false}\n                        defaultValue=\"upbit\"\n                        onChange={handleOptionChange}>\n                        <Option value=\"upbit\">Upbit</Option>\n                        <Option value=\"bitsum\">Bitsum</Option>\n                        <Option value=\"coinone\">Coinone</Option>\n                        <Option value=\"coinbit\">Coinbit</Option>\n                      </Select>\n                    </Col>\n                  </Row>\n                </div>\n              );\n            }}\n            />\n      </div>\n    )\n}\n\nexport default CalendarPage"]},"metadata":{},"sourceType":"module"}